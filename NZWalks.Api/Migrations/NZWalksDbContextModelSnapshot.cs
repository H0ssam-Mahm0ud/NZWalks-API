// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.Api.Data;

#nullable disable

namespace NZWalks.Api.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    partial class NZWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc472633-3da0-4844-945d-ae2b1fb7d6d8"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("a93ff308-a1a5-43b5-8aa1-bffff3ddd44b"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("678c41a8-3df5-4b23-8f3e-194ff06b2056"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53012cc3-2f72-445e-9133-f5cce605ebdd"),
                            Code = "Rus",
                            Name = "Russia",
                            RegionImageUrl = "https://penntoday.upenn.edu/sites/default/files/2022-02/Russian-Disinformation-PWH.jpg"
                        },
                        new
                        {
                            Id = new Guid("11f3fc30-888f-4de6-a13c-dfe84c19a281"),
                            Code = "Par",
                            Name = "Paris",
                            RegionImageUrl = "https://images.unsplash.com/photo-1502602898657-3e91760cbb34?fm=jpg&q=60&w=3000&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cGFyaXN8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            Id = new Guid("c0652939-bf95-4cf1-a40f-3d6e998638b9"),
                            Code = "Gem",
                            Name = "Germany",
                            RegionImageUrl = "https://etimg.etb2bimg.com/photo/93896068.cms"
                        },
                        new
                        {
                            Id = new Guid("06874890-fb2c-48ba-aae3-3a5d228ff446"),
                            Code = "Sul",
                            Name = "Sutherland",
                            RegionImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRJeZ2Kjks3UVg6A6_hfkx2N7ApDtF7esuIWkTfe3_jPMsOO8NJm2tWEL4nGbr870GpTY&usqp=CAU"
                        });
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKM")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.Api.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.Api.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
